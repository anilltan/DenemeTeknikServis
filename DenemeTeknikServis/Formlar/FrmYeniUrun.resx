<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureEdit8.EditValue" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>